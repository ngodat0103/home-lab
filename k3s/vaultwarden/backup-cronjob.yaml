apiVersion: batch/v1
kind: Job
metadata:
  name: aerith-vaultwarden-backup
  namespace: vaultwarden
spec:
  template:
    spec:
      restartPolicy: "OnFailure"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1012
        runAsGroup: 1012
      volumes:
      - name: "restic-volume"
        secret:
          secretName: "restic-secret"
      - name: "tmp"
        emptyDir:
          sizeLimit: "50Mi"
          medium: "Memory"
      - name: "vaultwarden-volume"
        secret:
          secretName: "vaultwarden-secret"
      initContainers:
      - name: "dump-vaultwarden-database"
        workingDir: "/backup/vaultwarden"
        image: "postgres:16.9-bookworm"
        volumeMounts:
        - mountPath: /backup/vaultwarden
          name: "tmp"
        env:
        - name: "PGHOST"
          value: "postgresql-r.database"
        - name: "PGUSER"
          value: "vaultwarden"
        - name: "PGDATABASE"
          value: "vaultwarden"
        - name: "PGPASSWORD"
          valueFrom:
            secretKeyRef:
              key: "PG_PASSWORD"
              name: "vaultwarden-secret"
        command:
        - "pg_dump"
        - "-f"
        - "full-dump.sql"
      containers:
      - name: "backup-your-vaultwarden-to-aerith-gdrive"
        image: "tofran/restic-rclone:0.12.1_1.63.1"
        command: [ "restic", "backup", "/backup/vaultwarden" ]
        workingDir: "/backup/vaultwarden"
        env:
        - name: "RCLONE_CONFIG"
          value: "/secrets/restic/rclone.conf"
        - name: "RESTIC_REPOSITORY"
          value: "rclone:aerith-google-drive:/restic/k8s/vaultwarden"
        - name: "RESTIC_PASSWORD_FILE"
          value: "/secrets/restic/restic_password.txt"
        volumeMounts:
        - mountPath: "/backup/vaultwarden"
          name: "tmp"
        - mountPath: "/secrets/restic"
          name: "restic-volume"
