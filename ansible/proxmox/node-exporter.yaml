- name: Deploy node exporter + SMART textfile collector
  hosts: proxmox-server
  become: true
  vars:
    node_exporter_textfile_dir: /var/lib/node_exporter/textfile_collector
    disk_monitoring_home_dir: "/opt/disk-monitoring"
  pre_tasks:
    - name: Ensure deps (jq, smartmontools, nvme-cli, moreutils/sponge)
      ansible.builtin.apt:
        name:
          - jq
          - smartmontools
          - nvme-cli
          - moreutils
          - git
        update_cache: false
        state: present
    - name: Checkout S.M.A.R.T-disk-monitoring-for-Prometheus (pinned commit)
      ansible.builtin.git:
        repo: https://github.com/micha37-martins/S.M.A.R.T-disk-monitoring-for-Prometheus.git
        dest: "{{disk_monitoring_home_dir}}"
        version: "d0b3e6a485704d6e54fef40d7f2d8f54ff84d66e"
        depth: 1
    - name: Ensure install.sh is executable
      ansible.builtin.file:
        path: "{{disk_monitoring_home_dir}}/install.sh"
        mode: "0755"
    - name: Run install.sh (idempotent if systemd timer already present)
      ansible.builtin.shell: |
        set -euo pipefail
        /opt/disk-monitoring/install.sh
      args:
        executable: /bin/bash
      changed_when: false
      when: >
        ansible_facts.services is not defined
        or 'smartmon.timer' not in ansible_facts.services
        or ansible_facts.services['smartmon.timer'].status != 'enabled'
      vars:
        ansible_facts_services: "{{ ansible_facts.services | default({}) }}"
      register: _smart_install
    - name: Ensure textfile dir exists
      ansible.builtin.file:
        path: "{{ node_exporter_textfile_dir }}"
        state: directory
        owner: root
        group: root
        mode: "0700"
  roles:
      # https://galaxy.ansible.com/ui/repo/published/prometheus/prometheus/content/role/node_exporter/?version=0.27.1
      # ansible-galaxy-collection install prometheus.prometheus:0.27.1
      # https://github.com/prometheus-community/ansible/tree/0.27.0/roles/node_exporter
    - role: prometheus.prometheus.node_exporter 