- name: Manage postgres_exporter
  hosts: akira-home
  vars:
   DATA_SOURCE_USER: 'postgres_exporter'
   NETCAT_HEALCHECK_COMMAND: "printf \"GET /metrics HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\n\" | nc -w 2 127.0.0.1 9187 2>/dev/null | grep \"pg_up 1\" || exit 1"
   DATA_SOURCE_PASS: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          35383166376166623731353337356334366562636663346232386665633463343933653361353036
          3039346366626134323935336363626631376431333364380a653666316239353939333134626134
          64643836316534383464376633653362383637626563303264316339313831663465396236633261
          6561306239323964360a366664643831633337636330663131363734623861646537343935353163
          3939
   TEST_DOCKER_COMMAND: ["CMD","/bin/sh","-c","{{NETCAT_HEALCHECK_COMMAND}}"]
   DOCKER_IMAGE: "quay.io/prometheuscommunity/postgres-exporter@sha256:38606faa38c54787525fb0ff2fd6b41b4cfb75d455c1df294927c5f611699b17"
   HEALTHCHECK_DOCKER:
    start_period: 1s
    interval: 15s
    test: "{{TEST_DOCKER_COMMAND}}"
  tasks:
   - name: Make sure gitlab-postgres-exporter running
     ansible.builtin.docker_container:
      name: gitlab-postgres-exporter
      healthcheck: "{{HEALTHCHECK_DOCKER}}"
      restart_policy: always
      image: "{{DOCKER_IMAGE}}"
      networks:
        - name: runtime-network
          ipv4_address: "192.168.30.201"
      env:
       DATA_SOURCE_URI: '192.168.30.1:5432/gitlabhq_production'
       DATA_SOURCE_USER: "{{DATA_SOURCE_USER}}"
       DATA_SOURCE_PASS: "{{DATA_SOURCE_PASS}}"
   - name: Make sure vaultwarden-postgres-exporter running
     ansible.builtin.docker_container:
      name: vaultwarden-postgres-exporter
      healthcheck: "{{HEALTHCHECK_DOCKER}}"
      restart_policy: always
      image: "{{DOCKER_IMAGE}}"
      networks:
        - name: runtime-network
          ipv4_address: "192.168.30.101"
      env:
       DATA_SOURCE_URI: '192.168.30.1:5432/vaultwarden'
       DATA_SOURCE_USER: "{{DATA_SOURCE_USER}}"
       DATA_SOURCE_PASS: "{{DATA_SOURCE_PASS}}"
       