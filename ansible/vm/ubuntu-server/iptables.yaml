- name: Manage my own iptables
  hosts: ubuntu-server
  become: yes
  vars:
   lan_ip: "192.168.1.2/32"          # the only allowed source
   docker_subnet: "192.168.30.0/24"  # user-defined bridge subnet (runtime-network)
   lan_iface: "{{ ansible_default_ipv4.interface }}"  # or set explicitly: "eno1" / "eth0"
  tasks:
  - name: Make sure default policy is deny in forward chain
    ansible.builtin.iptables:
      chain: FORWARD
      policy: DROP
  - name: Allow NEW from my LAN IP to Docker subnet via DOCKER-USER
    ansible.builtin.iptables:
      table: filter
      chain: DOCKER-USER
      in_interface: "{{ lan_iface }}"
      source: "{{ lan_ip }}"
      destination: "{{ docker_subnet }}"
      ctstate: NEW
      jump: ACCEPT
      state: present
      action: insert
      rule_num: 1   # run before Docker’s own jumps
  - name: Bypass early raw drops (if any) for my LAN IP → Docker subnet
    ansible.builtin.iptables:
      table: raw
      chain: PREROUTING
      in_interface: "{{ lan_iface }}"
      source: "{{ lan_ip }}"
      destination: "{{ docker_subnet }}"
      jump: ACCEPT
      state: present
      action: insert
      rule_num: 1
    notify: "save iptables rules"
  - name: Ensure iptables-persistent is installed
    ansible.builtin.apt:
      name: iptables-persistent
      state: present
  - name: Handler to save iptables rules
    ansible.builtin.command: netfilter-persistent save
  
  
  
  
  
  # Old setting, will setup later
  # - name: Deny all traffic except my ip to access the virtual network created by OpenVPN in my local network
  #   ansible.builtin.iptables:
  #     chain: INPUT
  #     source: "!192.168.1.2"
  #     destination: 10.8.0.0/24
  #     jump: DROP
  #     state: absent
  # Because the Nat in OpenVPN hides the ip of the clients in my network, 
  # #so I don't know who is using my network, so I need to disable it to make vpn site to site work expectedly
  # - name: Make sure disable Nat in OpenVPN
  #   ansible.builtin.iptables:
  #     table: nat
  #     chain: POSTROUTING
  #     jump: MASQUERADE
  #     out_interface: tun0
  #     state: absent
  # - name: Manually allow traffic from the my vpn profile created by OpenVPN to access external network using MASQUERADE
  #   ansible.builtin.iptables:
  #     state: absent
  #     chain: POSTROUTING
  #     table: nat
  #     source: 10.8.0.2/32
  #     out_interface: enx000ec6c36eb3
  #     jump: MASQUERADE 
